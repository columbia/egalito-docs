This note is for AARCH64.

A) targets have diffent type of links
 - a function -> NormalLink
 - inside a TLS region (address given as an offset from TP) -> TLSDataOffsetLink
 - inside a data region in the same module -> RelativeDataLink
 - a symbol supplied by Loader emulator -> SymbolOnlyLink
 - a marker that lies outside any data region -> UnresolvedLink
 - anything that's unresolved -> UnresolvedLink

B) links are resolved in two stages in the following order
 1. [dataregion.cpp] resolve using address
    - targets with address (can resolved within the same module)
	- targets in a TLS aregion
 2. [relocdata.cpp] resolve using symbols (requires an alias map)
    - targets in an external module

C) A special case is a literal that has a relocation. For this case, we create
a LinkedLiteralInstruction. There will be a NormalLink to this type of chunk,
which points to either code or data. This is only seen in a statically linked
binary.

*) Regarding addend,
 - (guess) it should only be present when the target is within the same module
 - then, it should be used to calculate the target address and will not be
   necessary afterward (e.g. when fixing variable link target)
